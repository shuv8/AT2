Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    CALL
    COMMAND
    CONVERT
    DIGIT
    DIGITIZE
    ENDFUNC
    ENDIF
    ENDU
    ENDW
    FUNC
    IFHIGH
    IFLESS
    IFNHIGH
    IFNLESS
    IFNZERO
    IFZERO
    PARAM
    RETURN
    STRING
    TO
    UNTIL
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> declaration NEWLINE
Rule 5     statement -> assignment NEWLINE
Rule 6     statement -> convert NEWLINE
Rule 7     declaration -> VARIANT variant
Rule 8     declaration -> VARIANT variant ASSIGNMENT initialization
Rule 9     variant -> NAME
Rule 10    variant -> NAME varsize
Rule 11    varsize -> LSQBRACKET decimal_expression RSQBRACKET
Rule 12    varsize -> LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET
Rule 13    initialization -> LBRACE init_lists RBRACE
Rule 14    init_lists -> init_lists init_list
Rule 15    init_lists -> init_list
Rule 16    init_list -> LBRACE inits RBRACE
Rule 17    init_list -> LBRACE RBRACE
Rule 18    inits -> inits init
Rule 19    inits -> init
Rule 20    init -> expressions COMMA expression SEMICOLON
Rule 21    init -> expression SEMICOLON
Rule 22    expressions -> expressions COMMA expression
Rule 23    expressions -> expression
Rule 24    expression -> math_expression
Rule 25    expression -> const
Rule 26    expression -> variant
Rule 27    decimal_expression -> dec_math_expression
Rule 28    decimal_expression -> decimal_const
Rule 29    decimal_expression -> variant
Rule 30    math_expression -> expression PLUS expression
Rule 31    math_expression -> MINUS expression
Rule 32    dec_math_expression -> decimal_expression PLUS decimal_expression
Rule 33    dec_math_expression -> MINUS decimal_expression
Rule 34    const -> TRUE
Rule 35    const -> FALSE
Rule 36    const -> DECIMAL
Rule 37    const -> LETTERS
Rule 38    decimal_const -> DECIMAL
Rule 39    assignment -> variant ASSIGNMENT expression
Rule 40    convert -> <empty>

Terminals, with rules where they appear

ASSIGNMENT           : 8 39
BOOL                 : 
CALL                 : 
COMMA                : 12 20 22
COMMAND              : 
CONVERT              : 
DECIMAL              : 36 38
DIGIT                : 
DIGITIZE             : 
ENDFUNC              : 
ENDIF                : 
ENDU                 : 
ENDW                 : 
FALSE                : 35
FUNC                 : 
IFHIGH               : 
IFLESS               : 
IFNHIGH              : 
IFNLESS              : 
IFNZERO              : 
IFZERO               : 
LBRACE               : 13 16 17
LETTERS              : 37
LSQBRACKET           : 11 12
MINUS                : 31 33
NAME                 : 9 10
NEWLINE              : 4 5 6
PARAM                : 
PLUS                 : 30 32
RBRACE               : 13 16 17
RETURN               : 
RSQBRACKET           : 11 12
SEMICOLON            : 20 21
STRING               : 
TO                   : 
TRUE                 : 34
UNTIL                : 
VARIANT              : 7 8
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assignment           : 5
const                : 25
convert              : 6
dec_math_expression  : 27
decimal_const        : 28
decimal_expression   : 11 12 12 32 32 33
declaration          : 4
expression           : 20 21 22 23 30 30 31 39
expressions          : 20 22
init                 : 18 19
init_list            : 14 15
init_lists           : 13 14
initialization       : 8
inits                : 16 18
math_expression      : 24
program              : 0
statement            : 2 3
statements           : 1 2
variant              : 7 8 26 29 39
varsize              : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . declaration NEWLINE
    (5) statement -> . assignment NEWLINE
    (6) statement -> . convert NEWLINE
    (7) declaration -> . VARIANT variant
    (8) declaration -> . VARIANT variant ASSIGNMENT initialization
    (39) assignment -> . variant ASSIGNMENT expression
    (40) convert -> .
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    VARIANT         shift and go to state 7
    NEWLINE         reduce using rule 40 (convert -> .)
    NAME            shift and go to state 9

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    convert                        shift and go to state 6
    variant                        shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . declaration NEWLINE
    (5) statement -> . assignment NEWLINE
    (6) statement -> . convert NEWLINE
    (7) declaration -> . VARIANT variant
    (8) declaration -> . VARIANT variant ASSIGNMENT initialization
    (39) assignment -> . variant ASSIGNMENT expression
    (40) convert -> .
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    $end            reduce using rule 1 (program -> statements .)
    VARIANT         shift and go to state 7
    NEWLINE         reduce using rule 40 (convert -> .)
    NAME            shift and go to state 9

    statement                      shift and go to state 10
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    convert                        shift and go to state 6
    variant                        shift and go to state 8

state 3

    (3) statements -> statement .

    VARIANT         reduce using rule 3 (statements -> statement .)
    NAME            reduce using rule 3 (statements -> statement .)
    NEWLINE         reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> declaration . NEWLINE

    NEWLINE         shift and go to state 11


state 5

    (5) statement -> assignment . NEWLINE

    NEWLINE         shift and go to state 12


state 6

    (6) statement -> convert . NEWLINE

    NEWLINE         shift and go to state 13


state 7

    (7) declaration -> VARIANT . variant
    (8) declaration -> VARIANT . variant ASSIGNMENT initialization
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    NAME            shift and go to state 9

    variant                        shift and go to state 14

state 8

    (39) assignment -> variant . ASSIGNMENT expression

    ASSIGNMENT      shift and go to state 15


state 9

    (9) variant -> NAME .
    (10) variant -> NAME . varsize
    (11) varsize -> . LSQBRACKET decimal_expression RSQBRACKET
    (12) varsize -> . LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET

    ASSIGNMENT      reduce using rule 9 (variant -> NAME .)
    NEWLINE         reduce using rule 9 (variant -> NAME .)
    PLUS            reduce using rule 9 (variant -> NAME .)
    RSQBRACKET      reduce using rule 9 (variant -> NAME .)
    COMMA           reduce using rule 9 (variant -> NAME .)
    SEMICOLON       reduce using rule 9 (variant -> NAME .)
    LSQBRACKET      shift and go to state 17

    varsize                        shift and go to state 16

state 10

    (2) statements -> statements statement .

    VARIANT         reduce using rule 2 (statements -> statements statement .)
    NAME            reduce using rule 2 (statements -> statements statement .)
    NEWLINE         reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)


state 11

    (4) statement -> declaration NEWLINE .

    VARIANT         reduce using rule 4 (statement -> declaration NEWLINE .)
    NAME            reduce using rule 4 (statement -> declaration NEWLINE .)
    NEWLINE         reduce using rule 4 (statement -> declaration NEWLINE .)
    $end            reduce using rule 4 (statement -> declaration NEWLINE .)


state 12

    (5) statement -> assignment NEWLINE .

    VARIANT         reduce using rule 5 (statement -> assignment NEWLINE .)
    NAME            reduce using rule 5 (statement -> assignment NEWLINE .)
    NEWLINE         reduce using rule 5 (statement -> assignment NEWLINE .)
    $end            reduce using rule 5 (statement -> assignment NEWLINE .)


state 13

    (6) statement -> convert NEWLINE .

    VARIANT         reduce using rule 6 (statement -> convert NEWLINE .)
    NAME            reduce using rule 6 (statement -> convert NEWLINE .)
    NEWLINE         reduce using rule 6 (statement -> convert NEWLINE .)
    $end            reduce using rule 6 (statement -> convert NEWLINE .)


state 14

    (7) declaration -> VARIANT variant .
    (8) declaration -> VARIANT variant . ASSIGNMENT initialization

    NEWLINE         reduce using rule 7 (declaration -> VARIANT variant .)
    ASSIGNMENT      shift and go to state 18


state 15

    (39) assignment -> variant ASSIGNMENT . expression
    (24) expression -> . math_expression
    (25) expression -> . const
    (26) expression -> . variant
    (30) math_expression -> . expression PLUS expression
    (31) math_expression -> . MINUS expression
    (34) const -> . TRUE
    (35) const -> . FALSE
    (36) const -> . DECIMAL
    (37) const -> . LETTERS
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    MINUS           shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    DECIMAL         shift and go to state 26
    LETTERS         shift and go to state 27
    NAME            shift and go to state 9

    variant                        shift and go to state 19
    expression                     shift and go to state 20
    math_expression                shift and go to state 21
    const                          shift and go to state 22

state 16

    (10) variant -> NAME varsize .

    ASSIGNMENT      reduce using rule 10 (variant -> NAME varsize .)
    NEWLINE         reduce using rule 10 (variant -> NAME varsize .)
    PLUS            reduce using rule 10 (variant -> NAME varsize .)
    RSQBRACKET      reduce using rule 10 (variant -> NAME varsize .)
    COMMA           reduce using rule 10 (variant -> NAME varsize .)
    SEMICOLON       reduce using rule 10 (variant -> NAME varsize .)


state 17

    (11) varsize -> LSQBRACKET . decimal_expression RSQBRACKET
    (12) varsize -> LSQBRACKET . decimal_expression COMMA decimal_expression RSQBRACKET
    (27) decimal_expression -> . dec_math_expression
    (28) decimal_expression -> . decimal_const
    (29) decimal_expression -> . variant
    (32) dec_math_expression -> . decimal_expression PLUS decimal_expression
    (33) dec_math_expression -> . MINUS decimal_expression
    (38) decimal_const -> . DECIMAL
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    MINUS           shift and go to state 32
    DECIMAL         shift and go to state 33
    NAME            shift and go to state 9

    decimal_expression             shift and go to state 28
    dec_math_expression            shift and go to state 29
    decimal_const                  shift and go to state 30
    variant                        shift and go to state 31

state 18

    (8) declaration -> VARIANT variant ASSIGNMENT . initialization
    (13) initialization -> . LBRACE init_lists RBRACE

    LBRACE          shift and go to state 35

    initialization                 shift and go to state 34

state 19

    (26) expression -> variant .

    PLUS            reduce using rule 26 (expression -> variant .)
    NEWLINE         reduce using rule 26 (expression -> variant .)
    SEMICOLON       reduce using rule 26 (expression -> variant .)
    COMMA           reduce using rule 26 (expression -> variant .)


state 20

    (39) assignment -> variant ASSIGNMENT expression .
    (30) math_expression -> expression . PLUS expression

    NEWLINE         reduce using rule 39 (assignment -> variant ASSIGNMENT expression .)
    PLUS            shift and go to state 36


state 21

    (24) expression -> math_expression .

    PLUS            reduce using rule 24 (expression -> math_expression .)
    NEWLINE         reduce using rule 24 (expression -> math_expression .)
    SEMICOLON       reduce using rule 24 (expression -> math_expression .)
    COMMA           reduce using rule 24 (expression -> math_expression .)


state 22

    (25) expression -> const .

    PLUS            reduce using rule 25 (expression -> const .)
    NEWLINE         reduce using rule 25 (expression -> const .)
    SEMICOLON       reduce using rule 25 (expression -> const .)
    COMMA           reduce using rule 25 (expression -> const .)


state 23

    (31) math_expression -> MINUS . expression
    (24) expression -> . math_expression
    (25) expression -> . const
    (26) expression -> . variant
    (30) math_expression -> . expression PLUS expression
    (31) math_expression -> . MINUS expression
    (34) const -> . TRUE
    (35) const -> . FALSE
    (36) const -> . DECIMAL
    (37) const -> . LETTERS
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    MINUS           shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    DECIMAL         shift and go to state 26
    LETTERS         shift and go to state 27
    NAME            shift and go to state 9

    expression                     shift and go to state 37
    math_expression                shift and go to state 21
    const                          shift and go to state 22
    variant                        shift and go to state 19

state 24

    (34) const -> TRUE .

    PLUS            reduce using rule 34 (const -> TRUE .)
    NEWLINE         reduce using rule 34 (const -> TRUE .)
    SEMICOLON       reduce using rule 34 (const -> TRUE .)
    COMMA           reduce using rule 34 (const -> TRUE .)


state 25

    (35) const -> FALSE .

    PLUS            reduce using rule 35 (const -> FALSE .)
    NEWLINE         reduce using rule 35 (const -> FALSE .)
    SEMICOLON       reduce using rule 35 (const -> FALSE .)
    COMMA           reduce using rule 35 (const -> FALSE .)


state 26

    (36) const -> DECIMAL .

    PLUS            reduce using rule 36 (const -> DECIMAL .)
    NEWLINE         reduce using rule 36 (const -> DECIMAL .)
    SEMICOLON       reduce using rule 36 (const -> DECIMAL .)
    COMMA           reduce using rule 36 (const -> DECIMAL .)


state 27

    (37) const -> LETTERS .

    PLUS            reduce using rule 37 (const -> LETTERS .)
    NEWLINE         reduce using rule 37 (const -> LETTERS .)
    SEMICOLON       reduce using rule 37 (const -> LETTERS .)
    COMMA           reduce using rule 37 (const -> LETTERS .)


state 28

    (11) varsize -> LSQBRACKET decimal_expression . RSQBRACKET
    (12) varsize -> LSQBRACKET decimal_expression . COMMA decimal_expression RSQBRACKET
    (32) dec_math_expression -> decimal_expression . PLUS decimal_expression

    RSQBRACKET      shift and go to state 38
    COMMA           shift and go to state 39
    PLUS            shift and go to state 40


state 29

    (27) decimal_expression -> dec_math_expression .

    RSQBRACKET      reduce using rule 27 (decimal_expression -> dec_math_expression .)
    COMMA           reduce using rule 27 (decimal_expression -> dec_math_expression .)
    PLUS            reduce using rule 27 (decimal_expression -> dec_math_expression .)


state 30

    (28) decimal_expression -> decimal_const .

    RSQBRACKET      reduce using rule 28 (decimal_expression -> decimal_const .)
    COMMA           reduce using rule 28 (decimal_expression -> decimal_const .)
    PLUS            reduce using rule 28 (decimal_expression -> decimal_const .)


state 31

    (29) decimal_expression -> variant .

    RSQBRACKET      reduce using rule 29 (decimal_expression -> variant .)
    COMMA           reduce using rule 29 (decimal_expression -> variant .)
    PLUS            reduce using rule 29 (decimal_expression -> variant .)


state 32

    (33) dec_math_expression -> MINUS . decimal_expression
    (27) decimal_expression -> . dec_math_expression
    (28) decimal_expression -> . decimal_const
    (29) decimal_expression -> . variant
    (32) dec_math_expression -> . decimal_expression PLUS decimal_expression
    (33) dec_math_expression -> . MINUS decimal_expression
    (38) decimal_const -> . DECIMAL
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    MINUS           shift and go to state 32
    DECIMAL         shift and go to state 33
    NAME            shift and go to state 9

    decimal_expression             shift and go to state 41
    dec_math_expression            shift and go to state 29
    decimal_const                  shift and go to state 30
    variant                        shift and go to state 31

state 33

    (38) decimal_const -> DECIMAL .

    RSQBRACKET      reduce using rule 38 (decimal_const -> DECIMAL .)
    COMMA           reduce using rule 38 (decimal_const -> DECIMAL .)
    PLUS            reduce using rule 38 (decimal_const -> DECIMAL .)


state 34

    (8) declaration -> VARIANT variant ASSIGNMENT initialization .

    NEWLINE         reduce using rule 8 (declaration -> VARIANT variant ASSIGNMENT initialization .)


state 35

    (13) initialization -> LBRACE . init_lists RBRACE
    (14) init_lists -> . init_lists init_list
    (15) init_lists -> . init_list
    (16) init_list -> . LBRACE inits RBRACE
    (17) init_list -> . LBRACE RBRACE

    LBRACE          shift and go to state 42

    init_lists                     shift and go to state 43
    init_list                      shift and go to state 44

state 36

    (30) math_expression -> expression PLUS . expression
    (24) expression -> . math_expression
    (25) expression -> . const
    (26) expression -> . variant
    (30) math_expression -> . expression PLUS expression
    (31) math_expression -> . MINUS expression
    (34) const -> . TRUE
    (35) const -> . FALSE
    (36) const -> . DECIMAL
    (37) const -> . LETTERS
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    MINUS           shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    DECIMAL         shift and go to state 26
    LETTERS         shift and go to state 27
    NAME            shift and go to state 9

    expression                     shift and go to state 45
    math_expression                shift and go to state 21
    const                          shift and go to state 22
    variant                        shift and go to state 19

state 37

    (31) math_expression -> MINUS expression .
    (30) math_expression -> expression . PLUS expression

  ! shift/reduce conflict for PLUS resolved as shift
    NEWLINE         reduce using rule 31 (math_expression -> MINUS expression .)
    SEMICOLON       reduce using rule 31 (math_expression -> MINUS expression .)
    COMMA           reduce using rule 31 (math_expression -> MINUS expression .)
    PLUS            shift and go to state 36

  ! PLUS            [ reduce using rule 31 (math_expression -> MINUS expression .) ]


state 38

    (11) varsize -> LSQBRACKET decimal_expression RSQBRACKET .

    ASSIGNMENT      reduce using rule 11 (varsize -> LSQBRACKET decimal_expression RSQBRACKET .)
    NEWLINE         reduce using rule 11 (varsize -> LSQBRACKET decimal_expression RSQBRACKET .)
    PLUS            reduce using rule 11 (varsize -> LSQBRACKET decimal_expression RSQBRACKET .)
    RSQBRACKET      reduce using rule 11 (varsize -> LSQBRACKET decimal_expression RSQBRACKET .)
    COMMA           reduce using rule 11 (varsize -> LSQBRACKET decimal_expression RSQBRACKET .)
    SEMICOLON       reduce using rule 11 (varsize -> LSQBRACKET decimal_expression RSQBRACKET .)


state 39

    (12) varsize -> LSQBRACKET decimal_expression COMMA . decimal_expression RSQBRACKET
    (27) decimal_expression -> . dec_math_expression
    (28) decimal_expression -> . decimal_const
    (29) decimal_expression -> . variant
    (32) dec_math_expression -> . decimal_expression PLUS decimal_expression
    (33) dec_math_expression -> . MINUS decimal_expression
    (38) decimal_const -> . DECIMAL
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    MINUS           shift and go to state 32
    DECIMAL         shift and go to state 33
    NAME            shift and go to state 9

    decimal_expression             shift and go to state 46
    dec_math_expression            shift and go to state 29
    decimal_const                  shift and go to state 30
    variant                        shift and go to state 31

state 40

    (32) dec_math_expression -> decimal_expression PLUS . decimal_expression
    (27) decimal_expression -> . dec_math_expression
    (28) decimal_expression -> . decimal_const
    (29) decimal_expression -> . variant
    (32) dec_math_expression -> . decimal_expression PLUS decimal_expression
    (33) dec_math_expression -> . MINUS decimal_expression
    (38) decimal_const -> . DECIMAL
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    MINUS           shift and go to state 32
    DECIMAL         shift and go to state 33
    NAME            shift and go to state 9

    decimal_expression             shift and go to state 47
    dec_math_expression            shift and go to state 29
    decimal_const                  shift and go to state 30
    variant                        shift and go to state 31

state 41

    (33) dec_math_expression -> MINUS decimal_expression .
    (32) dec_math_expression -> decimal_expression . PLUS decimal_expression

  ! shift/reduce conflict for PLUS resolved as shift
    RSQBRACKET      reduce using rule 33 (dec_math_expression -> MINUS decimal_expression .)
    COMMA           reduce using rule 33 (dec_math_expression -> MINUS decimal_expression .)
    PLUS            shift and go to state 40

  ! PLUS            [ reduce using rule 33 (dec_math_expression -> MINUS decimal_expression .) ]


state 42

    (16) init_list -> LBRACE . inits RBRACE
    (17) init_list -> LBRACE . RBRACE
    (18) inits -> . inits init
    (19) inits -> . init
    (20) init -> . expressions COMMA expression SEMICOLON
    (21) init -> . expression SEMICOLON
    (22) expressions -> . expressions COMMA expression
    (23) expressions -> . expression
    (24) expression -> . math_expression
    (25) expression -> . const
    (26) expression -> . variant
    (30) math_expression -> . expression PLUS expression
    (31) math_expression -> . MINUS expression
    (34) const -> . TRUE
    (35) const -> . FALSE
    (36) const -> . DECIMAL
    (37) const -> . LETTERS
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    RBRACE          shift and go to state 49
    MINUS           shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    DECIMAL         shift and go to state 26
    LETTERS         shift and go to state 27
    NAME            shift and go to state 9

    inits                          shift and go to state 48
    init                           shift and go to state 50
    expressions                    shift and go to state 51
    expression                     shift and go to state 52
    math_expression                shift and go to state 21
    const                          shift and go to state 22
    variant                        shift and go to state 19

state 43

    (13) initialization -> LBRACE init_lists . RBRACE
    (14) init_lists -> init_lists . init_list
    (16) init_list -> . LBRACE inits RBRACE
    (17) init_list -> . LBRACE RBRACE

    RBRACE          shift and go to state 53
    LBRACE          shift and go to state 42

    init_list                      shift and go to state 54

state 44

    (15) init_lists -> init_list .

    RBRACE          reduce using rule 15 (init_lists -> init_list .)
    LBRACE          reduce using rule 15 (init_lists -> init_list .)


state 45

    (30) math_expression -> expression PLUS expression .
    (30) math_expression -> expression . PLUS expression

  ! shift/reduce conflict for PLUS resolved as shift
    NEWLINE         reduce using rule 30 (math_expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 30 (math_expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (math_expression -> expression PLUS expression .)
    PLUS            shift and go to state 36

  ! PLUS            [ reduce using rule 30 (math_expression -> expression PLUS expression .) ]


state 46

    (12) varsize -> LSQBRACKET decimal_expression COMMA decimal_expression . RSQBRACKET
    (32) dec_math_expression -> decimal_expression . PLUS decimal_expression

    RSQBRACKET      shift and go to state 55
    PLUS            shift and go to state 40


state 47

    (32) dec_math_expression -> decimal_expression PLUS decimal_expression .
    (32) dec_math_expression -> decimal_expression . PLUS decimal_expression

  ! shift/reduce conflict for PLUS resolved as shift
    RSQBRACKET      reduce using rule 32 (dec_math_expression -> decimal_expression PLUS decimal_expression .)
    COMMA           reduce using rule 32 (dec_math_expression -> decimal_expression PLUS decimal_expression .)
    PLUS            shift and go to state 40

  ! PLUS            [ reduce using rule 32 (dec_math_expression -> decimal_expression PLUS decimal_expression .) ]


state 48

    (16) init_list -> LBRACE inits . RBRACE
    (18) inits -> inits . init
    (20) init -> . expressions COMMA expression SEMICOLON
    (21) init -> . expression SEMICOLON
    (22) expressions -> . expressions COMMA expression
    (23) expressions -> . expression
    (24) expression -> . math_expression
    (25) expression -> . const
    (26) expression -> . variant
    (30) math_expression -> . expression PLUS expression
    (31) math_expression -> . MINUS expression
    (34) const -> . TRUE
    (35) const -> . FALSE
    (36) const -> . DECIMAL
    (37) const -> . LETTERS
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    RBRACE          shift and go to state 56
    MINUS           shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    DECIMAL         shift and go to state 26
    LETTERS         shift and go to state 27
    NAME            shift and go to state 9

    init                           shift and go to state 57
    expressions                    shift and go to state 51
    expression                     shift and go to state 52
    math_expression                shift and go to state 21
    const                          shift and go to state 22
    variant                        shift and go to state 19

state 49

    (17) init_list -> LBRACE RBRACE .

    RBRACE          reduce using rule 17 (init_list -> LBRACE RBRACE .)
    LBRACE          reduce using rule 17 (init_list -> LBRACE RBRACE .)


state 50

    (19) inits -> init .

    RBRACE          reduce using rule 19 (inits -> init .)
    MINUS           reduce using rule 19 (inits -> init .)
    TRUE            reduce using rule 19 (inits -> init .)
    FALSE           reduce using rule 19 (inits -> init .)
    DECIMAL         reduce using rule 19 (inits -> init .)
    LETTERS         reduce using rule 19 (inits -> init .)
    NAME            reduce using rule 19 (inits -> init .)


state 51

    (20) init -> expressions . COMMA expression SEMICOLON
    (22) expressions -> expressions . COMMA expression

    COMMA           shift and go to state 58


state 52

    (21) init -> expression . SEMICOLON
    (23) expressions -> expression .
    (30) math_expression -> expression . PLUS expression

    SEMICOLON       shift and go to state 59
    COMMA           reduce using rule 23 (expressions -> expression .)
    PLUS            shift and go to state 36


state 53

    (13) initialization -> LBRACE init_lists RBRACE .

    NEWLINE         reduce using rule 13 (initialization -> LBRACE init_lists RBRACE .)


state 54

    (14) init_lists -> init_lists init_list .

    RBRACE          reduce using rule 14 (init_lists -> init_lists init_list .)
    LBRACE          reduce using rule 14 (init_lists -> init_lists init_list .)


state 55

    (12) varsize -> LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET .

    ASSIGNMENT      reduce using rule 12 (varsize -> LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET .)
    NEWLINE         reduce using rule 12 (varsize -> LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET .)
    PLUS            reduce using rule 12 (varsize -> LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET .)
    RSQBRACKET      reduce using rule 12 (varsize -> LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET .)
    COMMA           reduce using rule 12 (varsize -> LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET .)
    SEMICOLON       reduce using rule 12 (varsize -> LSQBRACKET decimal_expression COMMA decimal_expression RSQBRACKET .)


state 56

    (16) init_list -> LBRACE inits RBRACE .

    RBRACE          reduce using rule 16 (init_list -> LBRACE inits RBRACE .)
    LBRACE          reduce using rule 16 (init_list -> LBRACE inits RBRACE .)


state 57

    (18) inits -> inits init .

    RBRACE          reduce using rule 18 (inits -> inits init .)
    MINUS           reduce using rule 18 (inits -> inits init .)
    TRUE            reduce using rule 18 (inits -> inits init .)
    FALSE           reduce using rule 18 (inits -> inits init .)
    DECIMAL         reduce using rule 18 (inits -> inits init .)
    LETTERS         reduce using rule 18 (inits -> inits init .)
    NAME            reduce using rule 18 (inits -> inits init .)


state 58

    (20) init -> expressions COMMA . expression SEMICOLON
    (22) expressions -> expressions COMMA . expression
    (24) expression -> . math_expression
    (25) expression -> . const
    (26) expression -> . variant
    (30) math_expression -> . expression PLUS expression
    (31) math_expression -> . MINUS expression
    (34) const -> . TRUE
    (35) const -> . FALSE
    (36) const -> . DECIMAL
    (37) const -> . LETTERS
    (9) variant -> . NAME
    (10) variant -> . NAME varsize

    MINUS           shift and go to state 23
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    DECIMAL         shift and go to state 26
    LETTERS         shift and go to state 27
    NAME            shift and go to state 9

    expression                     shift and go to state 60
    math_expression                shift and go to state 21
    const                          shift and go to state 22
    variant                        shift and go to state 19

state 59

    (21) init -> expression SEMICOLON .

    RBRACE          reduce using rule 21 (init -> expression SEMICOLON .)
    MINUS           reduce using rule 21 (init -> expression SEMICOLON .)
    TRUE            reduce using rule 21 (init -> expression SEMICOLON .)
    FALSE           reduce using rule 21 (init -> expression SEMICOLON .)
    DECIMAL         reduce using rule 21 (init -> expression SEMICOLON .)
    LETTERS         reduce using rule 21 (init -> expression SEMICOLON .)
    NAME            reduce using rule 21 (init -> expression SEMICOLON .)


state 60

    (20) init -> expressions COMMA expression . SEMICOLON
    (22) expressions -> expressions COMMA expression .
    (30) math_expression -> expression . PLUS expression

    SEMICOLON       shift and go to state 61
    COMMA           reduce using rule 22 (expressions -> expressions COMMA expression .)
    PLUS            shift and go to state 36


state 61

    (20) init -> expressions COMMA expression SEMICOLON .

    RBRACE          reduce using rule 20 (init -> expressions COMMA expression SEMICOLON .)
    MINUS           reduce using rule 20 (init -> expressions COMMA expression SEMICOLON .)
    TRUE            reduce using rule 20 (init -> expressions COMMA expression SEMICOLON .)
    FALSE           reduce using rule 20 (init -> expressions COMMA expression SEMICOLON .)
    DECIMAL         reduce using rule 20 (init -> expressions COMMA expression SEMICOLON .)
    LETTERS         reduce using rule 20 (init -> expressions COMMA expression SEMICOLON .)
    NAME            reduce using rule 20 (init -> expressions COMMA expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
